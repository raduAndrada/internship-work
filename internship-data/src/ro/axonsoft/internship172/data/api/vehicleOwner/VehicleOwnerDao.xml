<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="ro.axonsoft.internship172.data.api.vehicleOwner.VehicleOwnerDao">

	<resultMap id="VehicleOwnerMap" type="MdfVehicleOwnerEntity">
		<id column="VEHICLE_OWNER_ID" property="vehicleOwnerId" />
		<association property="record" javaType="MdfVehicleOwnerBasicRecord"
			notNullColumn="RO_ID_CARD">
			<association property="basic" javaType="MdfVehicleOwnerBasic"
				notNullColumn="RO_ID_CARD">
				<result column="RO_ID_CARD" property="roIdCard" />
				<result column="REG_PLATE" property="regPlate" />
				<result column="ISSUE_DATE" property="issueDate" />
				<result column="COMENTARIU" property="comentariu" />
			</association>
			<association property="batch" javaType="MdfBatch">
				<result column="BATCH_ID" property="batchId" />
			</association>
		</association>
	</resultMap>

	<select id="getVehicleOwner" resultMap="VehicleOwnerMap">
		select distinct
		VEHICLE_OWNER_ID,
		<include refid="vhoColumns" />
		from VEHICLE_OWNER
		<where>
			<include refid="whereCriteria" />
			<include refid="searchCriteria" />
		</where>
		<include refid="sortCriteria" />
		<include refid="pagination" />
	</select>

	<!-- select batch -->

	<select id="getBatch" resultType="MdfBatch">
		select distinct
		BATCH_ID
		from BATCH
		<where>
			<include refid="whereCriteria" />
			<include refid="searchCriteria" />
		</where>
		<include refid="sortCriteria" />
		<include refid="pagination" />
	</select>

	<insert id="addVehicleOwner" keyProperty="vehicleOwnerId">
		insert into VEHICLE_OWNER (
		<include refid="vhoColumns" />
		) VALUES (
		#{record.basic.roIdCard}, #{record.basic.regPlate},
		#{record.basic.issueDate},
		#{record.basic.comentariu},
		#{record.batch.batchId}
		)
	</insert>

	<!-- add batch -->
	<insert id="addBatch" keyProperty="batchId">
		insert into BATCH VALUES
		(DEFAULT)
	</insert>

	<update id="updateVehicleOwner">
		update VEHICLE_OWNER
		<set>
			<if test="roIdCard != null">RO_ID_CARD=#{roIdCard},</if>
			<if test="regPlate != null">REG_PLATE=#{regPlate},</if>
			<if test="issueDate != null">ISSUE_DATE=#{issueDate},</if>
			<if test="comentariu != null">COMENTARIU=#{comentariu}</if>
			<if test="batchId != null">BATCH_ID = #{batch.batchId}</if>
		</set>
		<where>
			<include refid="whereCriteria" />
		</where>
	</update>

	<delete id="deleteVehicleOwner">
		delete from VEHICLE_OWNER
		<where>
			<include refid="whereCriteria" />
		</where>
	</delete>

	<select id="countVehicleOwner" resultType="Integer">
		select count(*)
		from VEHICLE_OWNER
		<where>
			<include refid="whereCriteria" />
			<include refid="searchCriteria" />
		</where>
	</select>


	<!-- count batch -->
	<select id="countBatch" resultType="Integer">
		select count(*)
		from BATCH
		<where>
			<include refid="whereCriteria" />
			<include refid="searchCriteria" />
		</where>
	</select>

	<sql id="whereCriteria">
		<if test="criteria != null">
			<if test="criteria.idIncl != null and !criteria.idIncl.empty">
				<foreach item="idInclItem" collection="criteria.idIncl"
					open="and VEHICLE_OWNER_ID in (" separator="," close=")">#{idInclItem}
				</foreach>
			</if>
			<if test="criteria.roIdCardIncl != null and !criteria.roIdCardIncl.empty">
				<foreach item="roIdCardInclItem" collection="criteria.roIdCardIncl"
					open="and RO_ID_CARD in (" separator="," close=")">#{roIdCardInclItem}
				</foreach>
			</if>
			<if
				test="criteria.idBatchSelect != null and !criteria.idBatchSelect.empty">
				<foreach item="idBatchSelect" collection="criteria.idBatchSelect"
					open="and BATCH_ID in (" separator="," close=")">#{idBatchSelect}
				</foreach>
			</if>
		</if>
	</sql>
	
	
	

	<sql id="sortCriteria">
		<if test="sort.size() > 0">
			order by
			<foreach item="sortItem" index="index" collection="sort"
				separator=",">
				${sortItem.criterion} ${sortItem.direction}
			</foreach>
		</if>
	</sql>

	<sql id="pagination">
		<if test="pagination != null">
			limit #{pagination.pageSize}
			offset #{pagination.offset}
		</if>
	</sql>

	<sql id="searchCriteria">
		<if test="search != null">
			<bind name="likePattern" value="'%' + search + '%'" />
			and
			UPPER(RO_ID_CARD) like UPPER(#{likePattern})
			or
			UPPER(REG_PLATE)
			like UPPER(#{likePattern})
			or
			UPPER(COMENTARIU) like
			UPPER(#{likePattern})
		</if>
	</sql>

	<sql id="vhoColumns">
		RO_ID_CARD, REG_PLATE, ISSUE_DATE, COMENTARIU, BATCH_ID
	</sql>


</mapper>